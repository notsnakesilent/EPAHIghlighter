{
    "algoritmo-structure": {
        "prefix": "algoritmo",
        "body": [
            "ALGORITMO ${1:Nombre}",
            "$0",
            "CONST       // Se definen constantes, que son variables cuyo valor no puede cambiar",
            "$0",
            "TIPOS       // Se definen variables de tipo Subrango y Enumerado (Basicamente listas)",
            "$0",
            "VAR         // Se definen variables",
            "$0",
            "INICIO      // Inicia el SubAlgoritmo",
            "$0",
            "FIN         // Finaliza el SubAlgoritmo"
        ],
        "description": "Estructura general de un algoritmo."
    },
    "subalgoritmo-structure": {
        "prefix": "subalgoritmo",
        "body": [
            "SUBALGORITMO ${1:Nombre}(${2:parametros})",
            "$0",
            "CONST       // Se definen constantes, que son variables cuyo valor no puede cambiar",
            "$0",
            "TIPOS       // Se definen variables de tipo Subrango y Enumerado (Basicamente listas)",
            "$0",
            "VAR         // Se definen variables",
            "$0",
            "INICIO      // Inicia el SubAlgoritmo",
            "$0",
            "FIN         // Finaliza el SubAlgoritmo"
        ],
        "description": "Estructura general de un Subalgoritmo."
    },
    "procedimiento-structure": {
        "prefix": "procedimiento",
        "body": [
            "Procedimiento ${1:Nombre}(E ${2:parametros_de_entrada}; S ${2:valores_de_salida})",
            "$0",
            "CONST       // Se definen constantes, que son variables cuyo valor no puede cambiar",
            "$0",
            "TIPOS       // Se definen variables de tipo Subrango y Enumerado (Basicamente listas)",
            "$0",
            "VAR         // Se definen variables",
            "$0",
            "INICIO      // Inicia el SubAlgoritmo",
            "$0",
            "FIN         // Finaliza el SubAlgoritmo"
        ],
        "description": "Estructura general de un Procedimiento."
    },
    "funcion-structure": {
        "prefix": "funcion",
        "body": [
            "Funcion ${1:Nombre}(E ${2:parametros_de_entrada}): ${3:tipo_de_valor_que_devuelve}",
            "$0",
            "CONST       //Se definen constantes, que son variables cuyo valor no puede cambiar",
            "$0",
            "TIPOS       //Se definen variables de tipo Subrango y Enumerado (Basicamente listas)",
            "$0",
            "VAR         //Se definen variables",
            "$0",
            "INICIO      //Inicia el SubAlgoritmo",
            "$0",
            "FIN         //Finaliza el SubAlgoritmo"
        ],
        "description": "Estructura general de una Funcion."
    },
    "si-block": {
        "prefix": "si",
        "body": [
            "Si (${1:condicion}) entonces  // Si esta condicion se cumple, se ejecuta el bloque hasta el FinSi",
            "$0",
            "FinSi"
        ],
        "description": "Bloque Sí"
    },
    "sino-block": {
        "prefix": "sisino",
        "body": [
            "Si (${1:condicion}) entonces // Si se cumple, se ejecuta lo que esta abajo hasta Sino",
            "$0",
            "Sino // En caso de que lo de arriba no se cumplio, se va a ejecutar el bloque desde Sino hasta FinSi",
            "$0",
            "FinSi"
        ],
        "description": "Bloque Si con Sino"
    },
    "segun-block": {
        "prefix": "segun",
        "body": [
            "Según (${1:variable}) hacer    // Segun lo que contenga esa variable , se va a ejecutar un codigo. Ej 1 : Mostrar (“Hola”)",
            "$0",
            "Fin Según"
        ],
        "description": "Bloque Según"
    },
    "mientras-block": {
        "prefix": "mientras",
        "body": [
            "Mientras (${1:condicion}) hacer // Mientras la condicion se cumpla, se ejecuta lo que este en el bloque. Ej Mientras cant > 0 hacer",
            "$0",
            "Fin Mientras"
        ],
        "description": "Bloque mientras"
    },
    "desde-block": {
        "prefix": "desde",
        "body": [
            "Desde ${1:variable} <- ${2:valor} hasta ${4:variable} con paso 1 hacer  // Se itera en un contador y se ejecuta el codigo n veces",
            "$0",
            "Fin Desde"
        ],
        "description": "Bloque desde"
    },
    "repetir-block": {
        "prefix": "repetir",
        "body": [
            "Repetir        // Se repite el codigo hasta que la condicion se cumpla",
            "$0",
            "Hasta (${1:condicion})"
        ],
        "description": "Bloque repetir"
    },
    "mostrar-function": {
        "prefix": "mostrar",
        "body": "Mostrar(${1:mensaje})      // Se escribe en consola",
        "description": "Función para mostrar un mensaje"
    },
    "ingresar-function": {
        "prefix": "ingresar",
        "body": "Ingresar(${1:variable})    // Se le pide al usuario un dato",
        "description": "Función Ingresar"
    },
    "listaEnteros-function": {
        "prefix": "arreglo",
        "body": "arreglo [${1:variable}] de enteros // Lista de enteros, Ej [1, 2, 3, 4]",
        "description": "Función Arreglo (Lista)"
    },
    "listaReales-function": {
        "prefix": "arreglo",
        "body": "arreglo [${1:variable}] de real // Lista de reales, Ej [1.2, 2.5, 3.7, 4.9]",
        "description": "Función Arreglo (Lista)"
    },
    "concatena-function": {
        "prefix": "concatena",
        "body": "concatena(${1:variable} ,${1:variable}) // Junta dos variables en una sola",
        "description": "Función Concatenar"
    },
    "long-function": {
        "prefix": "Long",
        "body": "Long(${1:variable}) // Devuelve la longitud de la cadena",
        "description": "Función Long"
    },
    "str-function": {
        "prefix": "str",
        "body": "str(${1:variable}) // Convierte un entero/real en una string",
        "description": "Función Str"
    },
    "val-function": {
        "prefix": "val",
        "body": "val(${1:variable}) // Convierte una string en un entero/real",
        "description": "Función Val"
    },
    "subcadena-function": {
        "prefix": "subcadena",
        "body": "Subcadena(${1:variable} ,${Indice} ,${FinIndice}) // Se obtiene lo que este entre el numero de caracter que indique “Indice“ y “FinIndice“",
        "description": "Función Subcadena"
    },
    "buscar-function": {
        "prefix": "buscar",
        "body": "Buscar(${1:cadena} ,${cadenaFuente}) // Devuelve la posición a partir de la cual se encuentra “cadena” dentro de “cadenaFuente”",
        "description": "Función Buscar"
    },
    "reemplazar-function": {
        "prefix": "reemplazar",
        "body": "Reemplazar(${1:cadBusca} ,${cadenaFuente} ,${cadReemplazo}) // Devuelve la cadena que resulta de sustituir todas las apariciones de cadBusca en cadenaFuente por cadReemplazo",
        "description": "Función Reemplazar"
    },
    "insertar-function": {
        "prefix": "insertar",
        "body": "Insertar(${1:cadena} ,${posicion} ,${cadenaFuente}) // Devuelve la cadena que resulta de insertar “cadena” a partir de “posición” en “cadenaFuente“",
        "description": "Función Insertar"
    },
    "registro-function": {
        "prefix": "registro",
        "body": [
            "Registro           //Estructura de datos que permite agrupar valores de tipo no homogéneo",
            "campo1: <tipo>",
            "Fin Registro"
        ],
        "description": "Función Registro"
    },
    "creararchivo-function": {
        "prefix": "crear",
        "body": "Crear(${1:miArchivo} ,${nombre})  //Crea un archivo",

        "description": "Función Crear Archivo"
    },
    "abrirarchivo-function": {
        "prefix": "abrir",
        "body": "Abrir(${1:miArchivo} ,${nombre})   //Abre un archivo para su edicion",

        "description": "Función Abrir Archivo"
    },
    "anexararchivo-function": {
        "prefix": "anexar",
        "body": "Anexar(${1:miArchivo} ,${nombre})  // Si existe un archivo con el nombre indicado en nombArch, lo abre y se bposiciona al final del archivo, si no existe el archivo, lo crea",

        "description": "Función Anexar Archivo"
    },
    "cerrararchivo-function": {
        "prefix": "cerrar",
        "body": "Cerrar(${1:miArchivo}) // Cierra el archivo",

        "description": "Función Cerrar Archivo"
    },
    "leerarchivoelemento-function": {
        "prefix": "leer",
        "body": "Leer(${1:miArchivo}, ${1:s}) // Recupera un caracter si el parámetro s es de tipo caracter o los caracteres de una línea que quepan en s si s es una cadena",

        "description": "Función Leer Elemento de Archivo"
    },
    "leerlnarchivoelemento-function": {
        "prefix": "leerln",
        "body": "LeerLN(${1:miArchivo}, ${1:s}) //  Recupera la línea de texto apuntada en ese momento del archivo referenciado a través de miArchivo, lo copia sobre el segundo parámetro (que tiene que ser de tipo cadena o de tipo caracter) y avanza el puntero del archivo al comienzo de la siguiente línea",

        "description": "Función Leer Linea Archivo"
    },
    "escribirarchivo-function": {
        "prefix": "escribir",
        "body": "Escribir(${1:miArchivo}, ${1:s}) // Escribe el contenido de s en la posición actual del archivo referenciado a través de varArch",

        "description": "Función Escribir Archivo"
    },
    "escribirlnarchivo-function": {
        "prefix": "escribir",
        "body": "Escribir(${1:miArchivo}, ${1:s}) // Escribe el contenido de s más un caracter de nueva línea",

        "description": "Función Escribir Linea Archivo"
    },
    "esfinlinea-function": {
        "prefix": "esfinlinea",
        "body": "esFinLinea(${1:miArchivo}) // Retoma verdadero Si se llegó a un final de línea",

        "description": "Función Es Fin Linea"
    },
    "esfinarchivo-function": {
        "prefix": "esfinarchivo",
        "body": "esFinArchivo(${1:miArchivo}) // Retoma verdadero Si se llegó a un final del archivo",

        "description": "Función Es Fin Archivo"
    },
    "poscionarse-function": {
        "prefix": "poscionarse",
        "body": "Posicionarse(${1:miArchivo}, ${1:pos}) // Ubica el puntero del archivo en la posición pos relativa al principio",

        "description": "Función Poscionarse Archivo"
    },
    "dondeestoy-function": {
        "prefix": "dondeestoy",
        "body": "DondeEstoy(${1:miArchivo}) // Devuelve la posición relativa en que se encuentra ubicado el puntero del archivo",

        "description": "Función Donde Estoy Archivo"
    },
    "tamaño-function": {
        "prefix": "tamaño",
        "body": "Tamaño(${1:miArchivo}) // Devuelve la cantidad de elementos que tiene el archivo",

        "description": "Función Tamaño Archivo"
    },
    "existearchivo-function": {
        "prefix": "existearchivo",
        "body": "ExisteArchivo(${1:miArchivo}) // Retoma verdadero si existe un archivo con ese nombre",

        "description": "Función Existe Archivo"
    },
    "BorrarArchivo-function": {
        "prefix": "borrararchivo",
        "body": "BorrarArchivo(${1:miArchivo}) // Elimina el archivo con ese nombre",

        "description": "Función Borrar Archivo"
    },
    "renomarchivo-function": {
        "prefix": "renombrararchivo",
        "body": "RenombrarArchivo(${1:miArchivo},${1:nuevoNombre}) // Cambia el nombre del archivo miArchivo con nuevoNombre",

        "description": "Función Renombrar Archivo"
    }
}

